/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    Metadata: {
      address: "0x49b8e3b089d4ebf9f37b1da9b839ec013c2cd8c9",
      abi: [
        {
          type: "constructor",
          inputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "addColor",
          inputs: [
            {
              name: "color",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "addDesign",
          inputs: [
            {
              name: "_design",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "baseSock",
          inputs: [
            {
              name: "colorClass",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "checkSock",
          inputs: [
            {
              name: "sock",
              type: "tuple",
              internalType: "struct Renderer.Sock",
              components: [
                {
                  name: "baseColorIndex",
                  type: "uint8",
                  internalType: "uint8",
                },
                {
                  name: "top",
                  type: "tuple",
                  internalType: "struct Renderer.Top",
                  components: [
                    {
                      name: "offset",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "stripes",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "thickness",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "gap",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                  ],
                },
                {
                  name: "heel",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "toe",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "design",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
              ],
            },
          ],
          outputs: [
            {
              name: "isValid",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "errors",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "colorPalette",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "decodeSock",
          inputs: [
            {
              name: "encoded",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "sock",
              type: "tuple",
              internalType: "struct Renderer.Sock",
              components: [
                {
                  name: "baseColorIndex",
                  type: "uint8",
                  internalType: "uint8",
                },
                {
                  name: "top",
                  type: "tuple",
                  internalType: "struct Renderer.Top",
                  components: [
                    {
                      name: "offset",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "stripes",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "thickness",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "gap",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                  ],
                },
                {
                  name: "heel",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "toe",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "design",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
              ],
            },
            {
              name: "tokenCount",
              type: "uint64",
              internalType: "uint64",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "designs",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "drawSock",
          inputs: [
            {
              name: "sock",
              type: "tuple",
              internalType: "struct Renderer.Sock",
              components: [
                {
                  name: "baseColorIndex",
                  type: "uint8",
                  internalType: "uint8",
                },
                {
                  name: "top",
                  type: "tuple",
                  internalType: "struct Renderer.Top",
                  components: [
                    {
                      name: "offset",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "stripes",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "thickness",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "gap",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                  ],
                },
                {
                  name: "heel",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "toe",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "design",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
              ],
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "encodeSock",
          inputs: [
            {
              name: "sock",
              type: "tuple",
              internalType: "struct Renderer.Sock",
              components: [
                {
                  name: "baseColorIndex",
                  type: "uint8",
                  internalType: "uint8",
                },
                {
                  name: "top",
                  type: "tuple",
                  internalType: "struct Renderer.Top",
                  components: [
                    {
                      name: "offset",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "stripes",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "thickness",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "gap",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                  ],
                },
                {
                  name: "heel",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "toe",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "design",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
              ],
            },
            {
              name: "tokenCount",
              type: "uint64",
              internalType: "uint64",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "generateFillStyle",
          inputs: [
            {
              name: "component",
              type: "string",
              internalType: "string",
            },
            {
              name: "sockId",
              type: "string",
              internalType: "string",
            },
            {
              name: "color",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "generateOutlineStyle",
          inputs: [
            {
              name: "sockId",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "generateStrokeStyle",
          inputs: [
            {
              name: "component",
              type: "string",
              internalType: "string",
            },
            {
              name: "sockId",
              type: "string",
              internalType: "string",
            },
            {
              name: "color",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "generateStyles",
          inputs: [
            {
              name: "sock",
              type: "tuple",
              internalType: "struct Renderer.Sock",
              components: [
                {
                  name: "baseColorIndex",
                  type: "uint8",
                  internalType: "uint8",
                },
                {
                  name: "top",
                  type: "tuple",
                  internalType: "struct Renderer.Top",
                  components: [
                    {
                      name: "offset",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "stripes",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "thickness",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "gap",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                  ],
                },
                {
                  name: "heel",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "toe",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "design",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
              ],
            },
            {
              name: "sockId",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getColor",
          inputs: [
            {
              name: "index",
              type: "uint8",
              internalType: "uint8",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getColorIndex",
          inputs: [
            {
              name: "color",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "uint8",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getDesign",
          inputs: [
            {
              name: "index",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "heel",
          inputs: [
            {
              name: "big",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "render",
          inputs: [
            {
              name: "encodedSockId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renderSock",
          inputs: [
            {
              name: "sock",
              type: "tuple",
              internalType: "struct Renderer.Sock",
              components: [
                {
                  name: "baseColorIndex",
                  type: "uint8",
                  internalType: "uint8",
                },
                {
                  name: "top",
                  type: "tuple",
                  internalType: "struct Renderer.Top",
                  components: [
                    {
                      name: "offset",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "stripes",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "thickness",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "gap",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                  ],
                },
                {
                  name: "heel",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "toe",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "design",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
              ],
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "toe",
          inputs: [
            {
              name: "big",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "tokenURI",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "top",
          inputs: [
            {
              name: "_top",
              type: "tuple",
              internalType: "struct Renderer.Top",
              components: [
                {
                  name: "offset",
                  type: "uint8",
                  internalType: "uint8",
                },
                {
                  name: "stripes",
                  type: "uint8",
                  internalType: "uint8",
                },
                {
                  name: "thickness",
                  type: "uint8",
                  internalType: "uint8",
                },
                {
                  name: "gap",
                  type: "uint8",
                  internalType: "uint8",
                },
                {
                  name: "colorIndex",
                  type: "uint8",
                  internalType: "uint8",
                },
              ],
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "updateDesign",
          inputs: [
            {
              name: "index",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_design",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "validateSock",
          inputs: [
            {
              name: "sock",
              type: "tuple",
              internalType: "struct Renderer.Sock",
              components: [
                {
                  name: "baseColorIndex",
                  type: "uint8",
                  internalType: "uint8",
                },
                {
                  name: "top",
                  type: "tuple",
                  internalType: "struct Renderer.Top",
                  components: [
                    {
                      name: "offset",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "stripes",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "thickness",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "gap",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                  ],
                },
                {
                  name: "heel",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "toe",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
                {
                  name: "design",
                  type: "tuple",
                  internalType: "struct Renderer.Style",
                  components: [
                    {
                      name: "colorIndex",
                      type: "uint8",
                      internalType: "uint8",
                    },
                    {
                      name: "index",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
              ],
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "validateStyle",
          inputs: [
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "style",
              type: "tuple",
              internalType: "struct Renderer.Style",
              components: [
                {
                  name: "colorIndex",
                  type: "uint8",
                  internalType: "uint8",
                },
                {
                  name: "index",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
            {
              name: "maxIndex",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "maxColorIndex",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "baseColorIndex",
              type: "uint8",
              internalType: "uint8",
            },
          ],
          outputs: [],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "validateTokenId",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1750247622.json",
      deploymentScript: "Deploy.s.sol",
    },
    SuperSocks: {
      address: "0x067c804bb006836469379d4a2a69a81803bd1f45",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_metadata",
              type: "address",
              internalType: "address",
            },
            {
              name: "_usdc",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "MAX_SUPPLY",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint16",
              internalType: "uint16",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "approve",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "result",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "cancelOwnershipHandover",
          inputs: [],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "completeOwnershipHandover",
          inputs: [
            {
              name: "pendingOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "counter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint16",
              internalType: "uint16",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ethPrice",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getApproved",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "result",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTokenId",
          inputs: [
            {
              name: "sockId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isApprovedForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "result",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "metadata",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract Metadata",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "mintWithEth",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "sockId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "mintWithUSDC",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "sockId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "result",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ownerOf",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "result",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ownershipHandoverExpiresAt",
          inputs: [
            {
              name: "pendingOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "result",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "requestOwnershipHandover",
          inputs: [],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "setApprovalForAll",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "isApproved",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setEthPrice",
          inputs: [
            {
              name: "_price",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setMetadata",
          inputs: [
            {
              name: "_metadata",
              type: "address",
              internalType: "contract Metadata",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setUsdcPrice",
          inputs: [
            {
              name: "_price",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supply",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint16",
              internalType: "uint16",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "result",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "symbol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "tokenURI",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "usdc",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "usdcPrice",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "withdraw",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdrawUSDC",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Approval",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ApprovalForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "isApproved",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipHandoverCanceled",
          inputs: [
            {
              name: "pendingOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipHandoverRequested",
          inputs: [
            {
              name: "pendingOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "oldOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Transfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "AccountBalanceOverflow",
          inputs: [],
        },
        {
          type: "error",
          name: "AlreadyInitialized",
          inputs: [],
        },
        {
          type: "error",
          name: "BalanceQueryForZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "FailedToSendEther",
          inputs: [],
        },
        {
          type: "error",
          name: "InsufficientETH",
          inputs: [],
        },
        {
          type: "error",
          name: "InsufficientUSDC",
          inputs: [],
        },
        {
          type: "error",
          name: "MaxSupplyReached",
          inputs: [],
        },
        {
          type: "error",
          name: "NewOwnerIsZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "NoHandoverRequest",
          inputs: [],
        },
        {
          type: "error",
          name: "NoTokensToWithdraw",
          inputs: [],
        },
        {
          type: "error",
          name: "NotOwnerNorApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "TokenAlreadyExists",
          inputs: [],
        },
        {
          type: "error",
          name: "TokenDoesNotExist",
          inputs: [],
        },
        {
          type: "error",
          name: "TransferFromIncorrectOwner",
          inputs: [],
        },
        {
          type: "error",
          name: "TransferToNonERC721ReceiverImplementer",
          inputs: [],
        },
        {
          type: "error",
          name: "TransferToZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "Unauthorized",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1750247622.json",
      deploymentScript: "Deploy.s.sol",
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
